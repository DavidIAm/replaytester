// basic imports
var events = require('events');
var util = require('util');

var lasterror = 'none';
var mq_status = 'uninitialized';
var known_exchanges = {};

// for us to do a require later
module.exports = check;

function check() {
    events.EventEmitter.call(this);
}

// inherit events.EventEmitter
check.super_ = events.EventEmitter;
check.prototype = Object.create(events.EventEmitter.prototype, {
    constructor: {
        value: check,
        enumerable: false
    }
});

check.prototype.displayStatus = function (req, res) {
	res.set('Content-Type', 'text/plain');
	var lines = 'test http response: ok\n'
	for (var exchange in known_exchanges) {
		lines += 'test ' + exchange + ' connection: ' + known_exchanges[exchange] + '\n';
	}
	lines += JSON.stringify(lasterror, null, 2);
	res.send(lines);
}

check.prototype.emitStatus = function () {
	var self = this;
	self.httpStatus();
	self.mqStatus();
}

check.prototype.httpStatus = function () {
	self.emit('health_http', 'ok');
}
check.prototype.mqStatus = function () {
	self.emit('health_mq', mq_status);
}

check.prototype.addListener('mqstate', function (state) {
		if (state) {
			mq_status = state;
		}
		return state;
	});

check.prototype.addListener('lasterror', function (e) {
		lasterror = e;
	});

check.prototype.addListener('exchangeState', function (exchange, state) {
		known_exchanges[exchange] = state;
	});

