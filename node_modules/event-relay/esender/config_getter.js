// basic imports
var events = require('events');
var fs = require('fs');

// for us to do a require later
module.exports = parser;

function parser() {
    events.EventEmitter.call(this);
}

// inherit events.EventEmitter
parser.super_ = events.EventEmitter;
parser.prototype = Object.create(events.EventEmitter.prototype, {
    constructor: {
        value: parser,
        enumerable: false
    }
});

parser.prototype.readFile = function (file) {
	var self = this;
	fs.readFile
		( file 
		, function( err, datastring ) {
				var configdata = JSON.parse(datastring);
				if (configdata.schemaSchema) {
					self.emit('schemaRootFile', configdata.schemaSchema, true);
				}
				if (configdata.rabbit) {
					self.emit('rabbit', configdata.rabbit, true);
				}
				if (configdata.secret) {
					self.emit('secret', configdata.secret, true);
				}
				if (configdata.statistics) {
					self.emit('statistics', configdata.statistics, true);
				}
				for (var exindex in configdata.exchanges) {
					self.emit('exchange', configdata.exchanges[exindex]);
				}
				for (var exindex in configdata.schemaDirectories) {
					var directory = configdata.schemaDirectories[exindex];
					fs.readdir( directory, function ( err, files ) {
						if (err) console.log("err: " + err);
						if (err) throw err;
						for (var file in files) {
							if (files[file].substr(-7) == '.schema') {
								self.emit('schemaFile', directory + '/' + files[file]);
							}
						}
					} );
				}
			}
		);
}

